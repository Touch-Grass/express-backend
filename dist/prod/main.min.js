const express=require("express");const bodyParser=require("body-parser");const cors=require("cors");const passport=require("passport");const LocalStrategy=require("passport-local");const session=require("express-session");const app=express(),port=process.env.PORT||8080;app.use(session({secret:"abdofjadfjaofijdsoafaiosdjf",resave:!1,saveUninitialized:!1})),app.use(cors()),app.use(bodyParser.json());const chatRouter=express.Router();chatRouter.get("/",(e,r)=>{r.send("Hello World!")});"use strict";const indexRouter=express.Router();indexRouter.get("/",(e,o)=>{o.setHeader("Access-Control-Allow-Origin","*"),o.json({message:"hello, world"})}),indexRouter.post("/",(e,o)=>{console.log("got request",e.body),o.setHeader("Access-Control-Request-Headers","*"),o.json({message:"Hi",body:e.body})});const testrouter=express.Router();testrouter.get("/",(e,r)=>{r.send("Hello World!")});app.use("/test",testrouter),app.use("/",indexRouter),app.use("/chat",chatRouter),app.use("/test2",(t,e)=>{e.send("Hello World!")}),app.use((t,e)=>e.status(404).send({message:`Route: ${t.url} Not found.`})),app.listen(port,()=>{console.log("server started at http://localhost:"+port)});passport.use(new LocalStrategy((s,r,e)=>e(null,"user"===s&&"password"===r&&{username:"user"}))),passport.serializeUser((s,r)=>{"username"in s?r(null,s.username):r(new Error("Unable to serialize user"))}),passport.deserializeUser((s,r)=>{r(null,{username:s})}),app.use(passport.initialize()),app.use(passport.session());